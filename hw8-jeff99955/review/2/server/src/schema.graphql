type Query {
  getMessage(name: String): [Message]
}

type Message {
    id: ID
    from: String
    to: String
    body: String
}

type Mutation {
    addMessage(from: String!, to: String!, body: String!): Message!
    deleteMessage(name: String!): String
    deleteAllMessage: String
}

type Subscription {
    message(name: String!): MessageSubscriptionPayload
    delete: MessageSubscriptionPayload2
}

type MessageSubscriptionPayload {
    mutation: MutationType!
    data: Message
}
type MessageSubscriptionPayload2 {
  mutation: MutationType!
  data: String!
}

enum MutationType {
    CREATED
    DELETED
}
